<Window x:Class="WpfApplication1.PrimaryDisplay"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WpfApplication1"
        mc:Ignorable="d"
        Title="Overview" Height="926.555" Width="508.657" Background="Black"
        Name="Overview" Icon="wd.png"
        >
    <Grid Margin="0,0,2,0">

        <Calendar x:Name="oCal" HorizontalAlignment="Left" Margin="149,387,0,0" VerticalAlignment="Top" SelectionMode="None" Background="#FFCDCDCD" Width="192" RenderTransformOrigin="0.5,0.5">
            <Calendar.Resources>
                <Style TargetType="CalendarDayButton">
                    <EventSetter Event="MouseDoubleClick" Handler="calendarDayButton_Click"/>
                </Style>
            </Calendar.Resources>
            <Calendar.RenderTransform>
                <TransformGroup>
                    <ScaleTransform ScaleY="2" ScaleX="2"/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform X="4" Y="4"/>
                </TransformGroup>
            </Calendar.RenderTransform>
            <Calendar.CalendarDayButtonStyle>
                <Style TargetType="{x:Type CalendarDayButton}" BasedOn="{StaticResource {x:Type CalendarDayButton}}">
                    <EventSetter Event="FrameworkElement.Loaded" Handler="calendarDayButton_Loaded"/>
                </Style>
            </Calendar.CalendarDayButtonStyle>


            <!--<Calendar.CalendarDayButtonStyle>
                <Style TargetType="CalendarDayButton" BasedOn="{StaticResource {x:Type CalendarDayButton}}">
                    <Style.Triggers>
                        <Trigger Property="IsBlackedOut" Value="False">
                            <Setter Property="Background" Value="#FF00E000"/>
                        </Trigger>

                        
                    </Style.Triggers>
                </Style>
            </Calendar.CalendarDayButtonStyle>-->

        </Calendar>

        <ListBox x:Name="databaseList" HorizontalAlignment="Stretch" Height="164" Margin="51,65,43,0" VerticalAlignment="Top" SelectionChanged="databaseList_SelectionChanged" ItemsSource="{Binding LoadDataBinding}" HorizontalContentAlignment="Stretch" Background="Gray">
            <ListBox.ItemTemplate>
                <DataTemplate>

                    <!-- Step #1: give an x:Name to this Grid -->
                    <Grid Margin="1" x:Name="BackgroundGrid" HorizontalAlignment="Stretch">
                        <TextBlock x:Name="serverNames" Grid.Column="1" Text="{Binding name}"/>
                    </Grid>

                    <!-- Step #2: create a DataTrigger that sets the Background of the Grid, depending on the value of IsOccupied property in the Model -->
                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding status}" Value="True">
                            <Setter TargetName="BackgroundGrid" Property="Background" Value="Green"/>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding status}" Value="False">
                            <Setter TargetName="BackgroundGrid" Property="Background" Value="Red" />
                            <Setter TargetName="serverNames" Property="Foreground" Value="White" />
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
        <Label x:Name="label3" Content="Server Overview" HorizontalAlignment="Left" Margin="169,24,0,0" VerticalAlignment="Top" Foreground="White" Height="41" Width="195" FontWeight="Bold" FontSize="20"/>
        <Button x:Name="viewServerButton" Content="View Server" HorizontalAlignment="Left" Margin="281,814,0,0" VerticalAlignment="Top" Width="75" Click="viewServerButton_Click" Visibility="Visible" IsEnabled="False"/>
        <Button x:Name="createDbButton" Content="Create Database" HorizontalAlignment="Left" VerticalAlignment="Top" Width="97" Margin="156,814,0,0" Click="createDbButton_Click" Visibility="Visible"/>
        <Button x:Name="disconnectAndExitButton" Content="Disconnect and Exit" HorizontalAlignment="Left" Height="22" Margin="156,763,0,0" VerticalAlignment="Top" Width="200" Click="disconnectAndExitButton_Click" Visibility="Visible"/>
        <TextBlock x:Name="textblock" HorizontalAlignment="Left" Margin="35,682,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Tag="" Foreground="White" Text="* Double click a date to view reboot summary on that date" FontSize="16" Width="421"/>
        <Label x:Name="label3_Copy" Content="Reboot Status by Day" HorizontalAlignment="Left" Margin="138,257,0,0" VerticalAlignment="Top" Foreground="White" Height="41" Width="228" FontWeight="Bold" FontSize="20"/>

    </Grid>
</Window>
