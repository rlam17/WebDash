<Window x:Class="WpfApplication1.PrimaryDisplay"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WpfApplication1"
        mc:Ignorable="d"
        Title="PrimaryDisplay" Height="696.884" Width="680.737" Background="Black">
    <Grid>

        <Calendar x:Name="oCal" HorizontalAlignment="Left" Margin="364,379,0,0" VerticalAlignment="Top" SelectionMode="None" Background="#FFCDCDCD" Width="192" RenderTransformOrigin="0.5,0.5" >
            <Calendar.RenderTransform>
                <TransformGroup>
                    <ScaleTransform ScaleY="2" ScaleX="2"/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform X="4" Y="4"/>
                </TransformGroup>
            </Calendar.RenderTransform>
            <Calendar.CalendarDayButtonStyle>

                <Style TargetType="{x:Type CalendarDayButton}" BasedOn="{StaticResource {x:Type CalendarDayButton}}">
                    <EventSetter Event="FrameworkElement.Loaded" Handler="calendarButton_Loaded"/>
                </Style>
            </Calendar.CalendarDayButtonStyle>

            <!--<Calendar.CalendarDayButtonStyle>
                <Style TargetType="CalendarDayButton" BasedOn="{StaticResource {x:Type CalendarDayButton}}">
                    <Style.Triggers>
                        <Trigger Property="IsBlackedOut" Value="False">
                            <Setter Property="Background" Value="#FF00E000"/>
                        </Trigger>

                        
                    </Style.Triggers>
                </Style>
            </Calendar.CalendarDayButtonStyle>-->

        </Calendar>

        <ListBox x:Name="databaseList" HorizontalAlignment="Stretch" Height="164" Margin="257,107,9,0" VerticalAlignment="Top" SelectionChanged="databaseList_SelectionChanged_1" ItemsSource="{Binding LoadDataBinding}" HorizontalContentAlignment="Stretch" Background="Gray">
            <ListBox.ItemTemplate>
                <DataTemplate>

                    <!-- Step #1: give an x:Name to this Grid -->
                    <Grid Margin="1" x:Name="BackgroundGrid" HorizontalAlignment="Stretch">
                        <TextBlock x:Name="serverNames" Grid.Column="1" Text="{Binding name}"/>
                    </Grid>

                    <!-- Step #2: create a DataTrigger that sets the Background of the Grid, depending on the value of IsOccupied property in the Model -->
                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding status}" Value="True">
                            <Setter TargetName="BackgroundGrid" Property="Background" Value="Green"/>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding status}" Value="False">
                            <Setter TargetName="BackgroundGrid" Property="Background" Value="Red" />
                            <Setter TargetName="serverNames" Property="Foreground" Value="White" />
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
        <Label x:Name="label3" Content="Server Overview" HorizontalAlignment="Left" Margin="366,61,0,0" VerticalAlignment="Top" Foreground="White" Height="33" Width="183" FontWeight="Bold" FontSize="16"/>
        <Button x:Name="viewServerButton" Content="View Server" HorizontalAlignment="Left" Margin="143,238,0,0" VerticalAlignment="Top" Width="75" Click="viewServerButton_Click" Visibility="Visible" IsEnabled="False"/>
        <Button x:Name="createDbButton" Content="Create Database" HorizontalAlignment="Left" VerticalAlignment="Top" Width="97" Margin="18,238,0,0" Click="createDbButton_Click" Visibility="Visible"/>
        <Button x:Name="disconnectAndExitButton" Content="Disconnect and Exit" HorizontalAlignment="Left" Height="22" Margin="18,159,0,0" VerticalAlignment="Top" Width="200" Click="disconnectAndExitButton_Click" Visibility="Visible"/>

    </Grid>
</Window>
